// Generated by CoffeeScript 1.6.3
var Player, game, gfx;

Player = (function() {
  Player.prototype.x = 0;

  Player.prototype.y = 0;

  Player.prototype.w = 18;

  Player.prototype.h = 24;

  function Player() {
    this.inAir = false;
  }

  Player.prototype.move = function() {
    this.x += xo;
    return this.y += yo;
  };

  Player.prototype.update = function() {
    var xo, yo;
    xo = yo = 0;
    return this.move(xo, yo);
  };

  Player.prototype.render = function() {
    gfx.ctx.fillStyle = "#fff";
    return gfx.ctx.fillRect(100, 100, 100, 100);
  };

  Player.prototype.move = function() {};

  return Player;

})();

gfx = {
  init: function() {
    var canvas;
    canvas = document.getElementById("game");
    this.ctx = canvas != null ? typeof canvas.getContext === "function" ? canvas.getContext("2d") : void 0 : void 0;
    if (!this.ctx) {
      return false;
    }
    this.w = canvas.width = 800;
    this.h = canvas.height = 400;
    return true;
  },
  clear: function() {
    return this.ctx.clearRect(0, 0, this.w, this.h);
  },
  load: function(onload) {
    return onload();
  }
};

game = {
  running: false,
  init: function() {
    if (!gfx.init()) {
      alert("Sorry, no canvas");
      return;
    }
    return gfx.load(function() {
      return game.reset();
    });
  },
  reset: function() {
    this.player = new Player;
    if (!this.running) {
      this.start();
      return this.tick();
    }
  },
  start: function() {
    this.running = true;
    return console.log("Starting game...");
  },
  stop: function() {
    this.running = false;
    return console.log("Stopping game");
  },
  tick: function() {
    if (!this.running) {
      return;
    }
    gfx.clear();
    this.update();
    this.render();
    return requestAnimationFrame(function() {
      return game.tick();
    });
  },
  update: function() {
    return this.player.update();
  },
  render: function() {
    gfx.ctx.fillStyle = "#000";
    gfx.ctx.fillRect(0, 0, gfx.w, gfx.h);
    return this.player.render();
  }
};
